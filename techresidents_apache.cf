#Uncomment for testing: /var/cfengine/bin/cf-agent -K -v -f <full_path>
#body common control {
# bundlesequence => { "techresidents_apache" };
#
# inputs => { 
#            "cfengine_stdlib.cf", 
#           };
#}

bundle common apache_globals
{
vars:

 "masterfiles" string => "/var/cfengine/masterfiles";
 
 "user" string => "500";
 "group" string => "500";
 "ifelapsed" int => "240";
}

bundle agent techresidents_apache
{

vars:

 "apache_packages" slist => {
	"mod_ssl"
 };

 "web_root" string => "/opt/30and30/www";
 "web_site" string => "techresidents.com";
 "web_app" string => "techresidents_web";
 "web_app_version" string => "0.2";
 "web_app_release" string => "1";


packages:
  "$(apache_packages)"
    comment => "Install apache packages",
    action => if_elapsed("$(apache_globals.ifelapsed)"),
    package_policy => "add",
    package_method => yum_ifelapsed;

  "$(web_app)"
    comment => "Install web application",
    action => if_elapsed("$(apache_globals.ifelapsed)"),
    package_policy => "addupdate",
    package_version => "$(web_app_version)-$(web_app_release)",
    package_architectures => { "x86_64" },
    package_method => yum_ifelapsed; 

methods:
  localdev::
    "any" usebundle => web_app("localdev", "$(web_root)", "$(web_site)", "$(web_app)", "$(web_app_version)");

processes:
  localdev::
    "httpd"
      comment => "Ensure httpd is running",
      action => if_elapsed(1),
      restart_class => "restart_httpd";

commands:
  restart_httpd::
    "/sbin/service httpd restart";	
}


bundle agent web_app(env, web_root, web_site, web_app, web_app_version)
{
classes:
  "env_localdev" expression => regcmp("localdev", "$(env)");

files:
    "/etc/httpd/conf.d/ssl.conf"
      comment => "Disable ssl.conf by renaming it to ssl.conf.unused",
      action => if_elapsed("$(apache_globals.ifelapsed)"),
      rename => to("/etc/httpd/conf.d/ssl.conf.unused");

    "/etc/httpd/conf/httpd.conf"
      comment => "Install apache configuration httpd.conf",
      action => if_elapsed("$(apache_globals.ifelapsed)"),
      copy_from => remote_dcp("$(apache_globals.masterfiles)/env/$(env)/apache/conf/httpd.conf", "$(sys.policy_hub)");

    "$(web_root)/."
      comment => "Create web root directory",
      perms => mog("644", "root", "root"),
      create => "true";

    "$(web_root)/$(web_site)/$(env)/log/."
      comment => "Create web app log directory",
      perms => mog("644", "$(apache_globals.user)", "$(apache_globals.group)"),
      create => "true";

    "$(web_root)/$(web_site)/$(env)/$(web_app)"
      comment => "Create web app symlink",
      move_obstructions => "true",
      link_from => ln_web("$(web_root)/$(web_site)/install/$(web_app)-$(web_app_version)/$(web_app)");
 
 
  #if localdev host and environment is set to localdev additionally configure the following
  localdev.env_localdev::
    "$(web_root)/localdev.com/ssl"
      comment => "Install localdev ssl certs",
      perms => mog("600", "root", "root"),
      action => if_elapsed("$(apache_globals.ifelapsed)"),
      copy_from => remote_dcp("$(apache_globals.masterfiles)/env/localdev/apache/ssl", "$(sys.policy_hub)"),
      depth_search => recurse("inf");

    "$(web_root)/localdev.com/localdev/."
      comment => "Create localdev.com localdev env directory",
      perms => mog("644", "root", "root"),
      action => if_elapsed("$(apache_globals.ifelapsed)"),
      create => "true";

    "$(web_root)/localdev.com/localdev/test"
      move_obstructions => "true",
      link_from => ln_web("$(web_root)/$(web_site)/install/$(web_app)-$(web_app_version)/$(web_app)");
}

body link_from ln_web(source)
{
  link_type => "symlink";
  source => "$(source)";
}
