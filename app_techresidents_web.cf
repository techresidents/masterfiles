#Uncomment for testing: /var/cfengine/bin/cf-agent -K -I -f <full_path>
#body common control {
# bundlesequence => { "app_techresidents_web" };
#
# inputs => { 
#            "cfengine_stdlib.cf", 
#            "globals.cf",
#            "sys_versions.cf",
#            "sys_repos.cf"
#           };
#}

bundle agent app_techresidents_web
{

vars:
 "web_root" string => "/opt/30and30/www";
 "web_site" string => "techresidents.com";
 "web_app" string => "techresidents_web";
 "web_app_arch" string => "x86_64";

classes:
 "sysgrp_cfengine" expression => classmatch("sysgrp_cfengine_.*");
 "techresidents_web" expression => classmatch("sysver_techresidents_web_.*");

methods:
  sysgrp_cfengine.sysver_techresidents_web_localdev::
    "any" usebundle => sys_repo_sync("$(web_app)", "$(python.techresidents_web_localdev_version)", "$(python.techresidents_web_localdev_release)", "$(web_app_arch)");
    "any" usebundle => sys_packages_rpm_multiversion("$(web_app)", "$(python.techresidents_web_localdev_version)", "$(python.techresidents_web_localdev_release)", "$(web_app_arch)");
    "any" usebundle => app_techresidents_web_conf("localdev", "$(web_root)", "$(web_site)", "$(web_app)", "$(python.techresidents_web_localdev_version)");

  sysgrp_cfengine.sysver_techresidents_web_integration::
    "any" usebundle => sys_repo_sync("$(web_app)", "$(python.techresidents_web_integration_version)", "$(python.techresidents_web_integration_release)", "$(web_app_arch)");
    "any" usebundle => sys_packages_rpm_multiversion("$(web_app)", "$(python.techresidents_web_integration_version)", "$(python.techresidents_web_integration_release)", "$(web_app_arch)");
    "any" usebundle => app_techresidents_web_conf("integration", "$(web_root)", "$(web_site)", "$(web_app)","$(python.techresidents_web_integration_version)");

  sysgrp_cfengine.sysver_techresidents_web_staging::
    "any" usebundle => sys_repo_sync("$(web_app)", "$(python.techresidents_web_staging_version)", "$(python.techresidents_web_staging_release)", "$(web_app_arch)");
    "any" usebundle => sys_packages_rpm_multiversion("$(web_app)", "$(python.techresidents_web_staging_version)", "$(python.techresidents_web_staging_release)", "$(web_app_arch)");
    "any" usebundle => app_techresidents_web_conf("staging", "$(web_root)", "$(web_site)", "$(web_app)", "$(python.techresidents_web_staging_version)");

  sysgrp_cfengine.sysver_techresidents_web_prod::
    "any" usebundle => sys_repo_sync("$(web_app)", "$(python.techresidents_web_prod_version)", "$(python.techresidents_web_prod_release)", "$(web_app_arch)");
    "any" usebundle => sys_packages_rpm_multiversion("$(web_app)", "$(python.techresidents_web_prod_version)", "$(python.techresidents_web_prod_release)", "$(web_app_arch)");
    "any" usebundle => app_techresidents_web_conf("prod", "$(web_root)", "$(web_site)", "$(web_app)", "$(python.techresidents_web_prod_version)");

processes:
  sysgrp_cfengine.techresidents_web::
    "httpd"
      comment => "Ensure httpd is running",
      action => if_elapsed(1),
      restart_class => "restart_httpd";

commands:
  sysgrp_cfengine.restart_httpd::
    "/sbin/service httpd restart";	
}

bundle agent app_techresidents_web_conf(env, web_root, web_site, web_app, web_app_version)
{
classes:
  "is_localdev" expression => regcmp("localdev", "$(env)");

files:
    "$(web_root)/."
      comment => "Create web root directory",
      perms => mog("644", "root", "root"),
      create => "true";

    "$(web_root)/$(web_site)/$(env)/log/."
      comment => "Create web app log directory",
      perms => mog("644", "$(globals.default_user)", "$(globals.default_group)"),
      create => "true";

    "$(web_root)/$(web_site)/$(env)/$(web_app)"
      comment => "Create web app symlink",
      move_obstructions => "true",
      link_from => ln_web("$(web_root)/$(web_site)/install/$(web_app)-$(web_app_version)/$(web_app)");
 
 
  #if localdev host and environment is set to localdev additionally configure the following
  localdev.is_localdev::
    "$(web_root)/localdev.com/ssl"
      comment => "Install localdev ssl certs",
      perms => mog("600", "root", "root"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/localdev/apache/ssl", "$(sys.policy_hub)"),
      depth_search => recurse("inf");

    "$(web_root)/localdev.com/localdev/."
      comment => "Create localdev.com localdev env directory",
      perms => mog("644", "root", "root"),
      create => "true";

    "$(web_root)/localdev.com/localdev/test"
      move_obstructions => "true",
      link_from => ln_web("$(web_root)/$(web_site)/install/$(web_app)-$(web_app_version)/$(web_app)");
}

body link_from ln_web(source)
{
  link_type => "symlink";
  source => "$(source)";
}
