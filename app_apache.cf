#Uncomment for testing: /var/cfengine/bin/cf-agent -K -I -f <full_path>
#body common control {
# bundlesequence => { "app_apache" };
#
# inputs => { 
#            "cfengine_stdlib.cf", 
#            "globals.cf",
#            "sys_versions.cf"
#           };
#}

bundle agent app_apache
{

vars:

 "apache_packages" slist => {
	"mod_ssl"
 };

classes:
 "sysgrp_cfengine" expression => classmatch("sysgrp_cfengine_.*");
 "apache" expression => classmatch("sysver_apache_.*");

packages:
  sysgrp_cfengine.apache::
    "$(apache_packages)"
      comment => "Install apache packages",
      classes => if_repaired("apache_installed"),        
      action => if_elapsed("$(globals.default_ifelapsed)"),
      package_policy => "add",
      package_method => yum_ifelapsed;

methods:
  sysgrp_cfengine.sysver_apache_localdev::
    "any" usebundle => app_apache_conf("localdev");

  sysgrp_cfengine.sysver_apache_integration::
    "any" usebundle => app_apache_conf("integration");

  sysgrp_cfengine.sysver_apache_staging::
    "any" usebundle => app_apache_conf("staging");

  sysgrp_cfengine.sysver_apache_prod::
    "any" usebundle => app_apache_conf("prod");

processes:
  sysgrp_cfengine.apache::
    "httpd"
      comment => "Ensure httpd is running",
      action => if_elapsed(1),
      restart_class => "restart_httpd";

commands:
  sysgrp_cfengine.apache.apache_installed::
    "/sbin/chkconfig httpd on";

  sysgrp_cfengine.restart_httpd::
    #The cmd_repair classes are necessary to ensure that the command will be executed.
    #If unique classes are not given and the same command has already been executed in
    #a previous promise, cfengine will optimize away the execution. This makes no sense,
    #but this is a work around until we get an explanation from CF.
    "/sbin/service httpd restart"
      action = if_elapsed(1),
      classes => cmd_repair("app_apache_restart", "app_apache_restart");
}


bundle agent app_apache_conf(env)
{
classes:
 "sysgrp_cfengine" expression => classmatch("sysgrp_cfengine_.*");

files:
    "/etc/httpd/conf.d/ssl.conf"
      comment => "Disable ssl.conf by renaming it to ssl.conf.unused",
      classes => if_repaired("apache_conf_repaired"),
      action => if_elapsed(1),
      rename => to("/etc/httpd/conf.d/ssl.conf.unused");

    "/etc/httpd/conf/httpd.conf"
      comment => "Install apache configuration httpd.conf",
      classes => if_repaired("apache_conf_repaired"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/$(env)/apache/conf/httpd.conf", "$(sys.policy_hub)");

commands:
  #only auto-restart apache for localdev environment
  #it's too risky in other environments.
  sysgrp_cfengine.sysver_apache_localdev.apache_conf_repaired::

    #The cmd_repair classes are necessary to ensure that the command will be executed.
    #If unique classes are not given and the same command has already been executed in
    #a previous promise, cfengine will optimize away the execution. This makes no sense,
    #but this is a work around until we get an explanation from CF.
    "/sbin/service httpd restart"
      action = if_elapsed(1),
      classes => cmd_repair("app_apache_conf_restart", "app_apache_conf_restart");
}
