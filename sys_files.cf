#Uncomment for testing: /var/cfengine/bin/cf-agent -K -I -f <full_path>
#body common control {
# bundlesequence => { "sys_files" };
#
# inputs => { 
#            "cfengine_stdlib.cf", 
#            "globals.cf"
#           };
#}

bundle agent sys_files
{

classes:
 "sysgrp_cfengine" expression => classmatch("sysgrp_cfengine_.*");

 #if host is in this group they are opting out of /opt sync
 "sysgrp_opt_out" expression => classmatch("sysgrp_opt_out_.*");

files:

#Following will be installed on all systems and do not contain a check for the sysgrp_cfengine class.
#This should only include the files necessary to determine if a host is under cfengine management.
#With the exception of hosts that are in the sysgrp_opt_out. This should only be localdev boxes
#which are testing non-standard versions.
  !sysgrp_opt_out::
    "$(globals.third_party_root)/etc"
      comment => "Sync $(globals.third_party_root)/etc directory",
      perms => mog("644", "root", "root"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/common$(globals.third_party_root)/etc", "$(sys.policy_hub)"),
      depth_search => recurse("inf");

    "$(globals.our_root)/etc"
      comment => "Sync $(globals.our_root)/etc directory",
      perms => mog("644", "root", "root"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/common$(globals.our_root)/etc", "$(sys.policy_hub)"),
      depth_search => recurse("inf");

    "$(globals.our_root)/bin"
      comment => "Sync $(globals.our_root)/bin directory",
      perms => mog("755", "root", "root"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/common$(globals.our_root)/bin", "$(sys.policy_hub)"),
      depth_search => recurse("inf");

    "/etc/ld.so.conf.d"
      comment => "Sync ldconfig ld.so.conf.d",
      perms => mog("644", "root", "root"),
      action => if_elapsed("$(globals.default_ifelapsed)"),
      classes => if_repaired("ldconfig_repaired"),
      copy_from => remote_dcp("$(globals.masterfiles)/env/common/etc/ld.so.conf.d", "$(sys.policy_hub)"),
      depth_search => recurse("inf");


#Non essential files should go below the following class check.
  sysgrp_cfengine::

commands:
  ldconfig_repaired::
    "/sbin/ldconfig";
}
